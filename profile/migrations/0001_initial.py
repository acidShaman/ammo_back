# Generated by Django 3.1 on 2020-08-26 11:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^([a-zA-Z.,-]{1,50})$', 'Street must contain only letters and , . -')])),
                ('number', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^([0-9]+\\s*([a-zA-Z]{0,}))$', 'Number must look like 78a or 78')])),
                ('entrance', models.IntegerField()),
                ('housing', models.CharField(blank=True, max_length=5)),
                ('door', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator('^([0-9]+\\s*([a-zA-Z]{0,}))$', 'Number must look like 78a or 78')])),
                ('floor', models.IntegerField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='DishModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator("^([a-zA-Z,./`!']{1,50})$", 'Name can contain a-z A-Z and some spec chars max 50 chars')])),
                ('price', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'dish',
                'verbose_name_plural': 'dishes',
                'db_table': 'dishes',
            },
        ),
        migrations.CreateModel(
            name='MenuModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^([a-zA-Z]{1,20})$', 'Category must be only letters 1 - 20 chars long')])),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='OrderItemModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.dishmodel')),
            ],
            options={
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='ProfileModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(error_messages={'error': 'Phone number might already ne used, please try another one'}, max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$', 'Phone number must look like this +380112233445')])),
                ('birthday', models.DateField(max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profile',
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.addressmodel')),
                ('order_items', models.ManyToManyField(related_name='orders', to='profile.OrderItemModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='IngredientModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^([a-zA-Z0-9.]{1,30})$', 'Ingredient might contain letters, numbers and . 30 chars maximum')])),
                ('dish', models.ManyToManyField(to='profile.DishModel')),
            ],
            options={
                'verbose_name': 'ingredient',
                'verbose_name_plural': 'ingredients',
                'db_table': 'ingredients',
            },
        ),
        migrations.CreateModel(
            name='ImgModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='', upload_to='dishes/img')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.dishmodel')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
                'db_table': 'images',
            },
        ),
        migrations.CreateModel(
            name='FavoritesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.dishmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'fav_dish',
                'verbose_name_plural': 'fav_dishes',
                'db_table': 'favorite_dishes',
            },
        ),
        migrations.AddField(
            model_name='dishmodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile.menumodel'),
        ),
        migrations.AddField(
            model_name='dishmodel',
            name='user_liked',
            field=models.ManyToManyField(through='profile.FavoritesModel', to=settings.AUTH_USER_MODEL),
        ),
    ]
